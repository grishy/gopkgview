name: commit
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  linter:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: "1.25.3"

      - run: go mod download
      - run: go mod verify

      - uses: golangci/golangci-lint-action@v8
        with:
          version: v2.5.0

  tests:
    name: tests-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-24.04
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: "1.25.3"

      - run: go mod download
      - run: go test -v ./...

  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Required for goreleaser to get git history

      - uses: actions/setup-go@v6
        with:
          go-version: "1.25.3"

      - name: Set up QEMU for cross-compilation of Docker images
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - run: go mod download

      - name: Run GoReleaser (snapshot build)
        uses: goreleaser/goreleaser-action@v6
        id: goreleaser
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --skip=publish --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          platforms: |
            linux/arm64
            linux/amd64
          tags: test-build
          build-args: |
            VERSION=${{ fromJSON(steps.goreleaser.outputs.metadata).version }}
            COMMIT=${{ fromJSON(steps.goreleaser.outputs.metadata).commit }}
            COMMIT_DATE=${{ fromJSON(steps.goreleaser.outputs.metadata).date }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
